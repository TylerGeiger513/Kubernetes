services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend.dev
    env_file:
      - .env
    volumes:
      - ./backend:/app         # Live reloading
      - /app/node_modules      # Preserve containerâ€™s node_modules
    environment:
      - NODE_ENV=development
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      - mongo
      - redis

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    env_file:
      - .env
    volumes:
      - ./frontend:/app        # Live reloading
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - PORT=${FRONTEND_PORT}
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    depends_on:
      - backend

  proxy:
    image: nginx:alpine
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./nginx/default.dev.conf.template
        target: /etc/nginx/conf.d/default.conf.template
        read_only: true
    ports:
      - "8081:80"
    command: >
      /bin/sh -c "apk add --no-cache busybox-extras gettext && \
      until nc -z backend ${BACKEND_PORT}; do echo 'Waiting for backend to be ready...'; sleep 2; done; \
      sed -e 's/%%DOMAIN%%/${DOMAIN}/g' -e 's/%%NGINX_BACKEND_UPSTREAM%%/${NGINX_BACKEND_UPSTREAM}/g' -e 's/%%NGINX_FRONTEND_UPSTREAM%%/${NGINX_FRONTEND_UPSTREAM}/g' /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - backend
      - frontend

  mongo:
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  redis:
    image: redis:latest
    env_file:
      - .env
    ports:
      - "6379:6379"

volumes:
  mongo-data:
